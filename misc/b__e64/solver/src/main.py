import socket
import solver
import sys
import re

mask = '*******??**?***?***???***?*??****??**??**?**?*?**???***?***?*??***?**?**?****?*?**???**?**?**?*?***???*?*****?*???***??***?**?*?*?**?**?**?**?*?***?**??***?*?*?***?***?*?***?*??**??***?****?*?****?*?????****??**?*****??****?**?****???*??**??****??*?***??*?****?*?*??***??*****?*?**?****?**???***?**?**??******???**??***?*?**********************'
pattern = re.compile(r'Q[1-8]: (\S{344})')

def read(s):
  msg = s.recv(1024)
  msg = str(msg, 'ascii')
  print(msg, end='')
  sys.stdout.flush()
  return msg

def send(s, msg):
  s.send(msg.encode('ascii') + b'\n')
  print(msg)
  sys.stdout.flush()

def solve(host, port):
  sock = socket.socket()
  sock.connect((host, port))

  read(sock)
  send(sock, mask)

  for _ in range(8):
    msg = read(sock)
    ma = pattern.search(msg)
    if ma is None:
      return False
    question = ma.group(1)
    sol = solver.solve(question)
    send(sock, sol)
  return 'TSGCTF' in read(sock)

if __name__ == '__main__':
  host, port = sys.argv[1], int(sys.argv[2])
  for _ in range(10):
    if solve(host, port):
      exit(0)
  else:
    exit(1)
